#!/usr/bin/env python3

import rospy
from sensor_msgs.msg import JointState

from markers import *
from projectfunctions import *

if __name__ == '__main__':
    
    rospy.init_node("testForwardKine")
    pub = rospy.Publisher('joint_states', JointState, queue_size=10)
    bmarker = BallMarker(color['GREEN'])

    # Joint names
    jnames = ['q1','q2','q3','q4','q5','q6','q7','q8',]
    # Joint Configuration
    q = np.array([0, 0.5, 0, np.pi/4, 0, np.pi/4, 0, 0.2])

    # End effector with respect to the base
    T = fkine_robot(q)
    print( np.round(T, 3) )
    bmarker.position(T)

    # Object (message) whose type is JointState
    jstate = JointState()
    # Set values to the message
    jstate.header.stamp = rospy.Time.now()
    jstate.name = jnames
    # Add the head joint value (with value 0) to the joints
    jstate.position = q

    # Loop rate (in Hz)
    rate = rospy.Rate(100)
    # Continuous execution loop
    while not rospy.is_shutdown():
        # Current time (needed for ROS)
        jstate.header.stamp = rospy.Time.now()
        # Publish the message
        pub.publish(jstate)
        bmarker.publish()
        # Wait for the next iteration
        rate.sleep()

